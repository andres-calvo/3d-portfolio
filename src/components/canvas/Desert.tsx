import { usePlane } from '@react-three/cannon'
import { useGLTF } from '@react-three/drei'
import { useLoader } from '@react-three/fiber'
import { TextureLoader } from 'three/src/loaders/TextureLoader'

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/playahres.glb')

  const [physicsRef] = usePlane(() => ({
    rotation: [0, 0, 0],
    position: [0, -1.5, 0],
    material: {
      friction: 0.1,
    },
    type: 'Static',
  }))
  const [colorMap, displacementMap, normalMap, roughnessMap, aoMap] = useLoader(TextureLoader, [
    '/assets/textures/sjzkfega_2K_Albedo.jpg',
    '/assets/textures/sjzkfega_2K_Displacement.jpg',
    '/assets/textures/sjzkfega_2K_Normal.jpg',
    '/assets/textures/sjzkfega_2K_Roughness.jpg',
    '/assets/textures/sjzkfega_2K_AO.jpg',
  ])

  return (
    <group {...props} dispose={null} ref={physicsRef}>
      <mesh geometry={nodes.Plane.geometry} material={nodes.Plane.material} castShadow>
        <meshStandardMaterial
          attach={'material'}
          map={colorMap}
          displacementMap={displacementMap}
          normalMap={normalMap}
          roughnessMap={roughnessMap}
          aoMap={aoMap}></meshStandardMaterial>
      </mesh>
    </group>
  )
}
export default Model

useGLTF.preload('/playahres.glb')
